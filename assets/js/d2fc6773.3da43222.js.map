{"version":3,"file":"assets/js/d2fc6773.3da43222.js","mappings":"4XAUaA,EAAc,CAAC,EACfC,EAAe,4BACfC,EAAW,CACtB,cAAiB,4BACjB,GAAM,4BACN,MAAS,4BACT,YAAe,sGACf,OAAU,0CACV,cAAiB,WACjB,KAAQ,6BACR,UAAa,4CACb,OAAS,EACT,QAAW,mGACX,KAAQ,GACR,QAAW,UACX,YAAe,CAAC,EAChB,QAAW,YACX,SAAY,CACV,MAAS,4BACT,UAAa,4CAEf,KAAQ,CACN,MAAS,6BACT,UAAa,+CAGJC,EAAS,CAAC,EAKVC,EAAM,CAAC,CAClBC,MAAO,YACPC,GAAI,YACJC,MAAO,GACN,CACDF,MAAO,+BACPC,GAAI,kBACJC,MAAO,GACN,CACDF,MAAO,sBACPC,GAAI,sBACJC,MAAO,GACN,CACDF,MAAO,mCACPC,GAAI,mCACJC,MAAO,GACN,CACDF,MAAO,mCACPC,GAAI,mCACJC,MAAO,GACN,CACDF,MAAO,kCACPC,GAAI,kCACJC,MAAO,GACN,CACDF,MAAO,+CACPC,GAAI,+CACJC,MAAO,IAGHC,EAAc,CAClBJ,IAAAA,GAGa,SAASK,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAE5E,cACE,GAAM,6BADR,8BAGA,sPAGA,0DACA,oBAAK,gBAAMC,WAAW,MAClB,UAAa,gBADZ,2IAOL,cACE,GAAM,aADR,cAGA,kBAAG,sBAAYA,WAAW,KAAvB,aAAH,yFACkB,sBAAYA,WAAW,KAAvB,aADlB,yCAEA,wIACC,sBAAYA,WAAW,KAAvB,aADD,gCAEA,cACE,GAAM,oBACL,sBAAYA,WAAW,MAAvB,aAFH,WAGA,mBACE,cAAIA,WAAW,MAAf,cAAkC,sBAAYA,WAAW,MAAvB,iBAAlC,sCAAkI,sBAAYA,WAAW,MAAvB,eAClI,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,UAApB,0EAEF,cACE,GAAM,uBADR,wBAGA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,uBADZ,yHAQL,oDACA,mBACE,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,QAApB,yCAA8G,sBAAYA,WAAW,MAAvB,aAA9G,MACA,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,SAApB,WAAiF,sBAAYA,WAAW,MAAvB,iBAAjF,8BACA,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,SAApB,2CAEF,cACE,GAAM,oCADR,qCAGA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,gBADZ,2IAOL,cACE,GAAM,oCADR,qCAGA,8EACmB,sBAAYA,WAAW,KAAvB,oBADnB,mCACkH,sBAAYA,WAAW,KAAvB,QADlH,0BAC4L,sBAAYA,WAAW,KAAvB,QAD5L,cAEA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,gBADZ,iPAcL,cACE,GAAM,mCADR,oCAGA,oDAAsC,sBAAYA,WAAW,KAAvB,iBAAtC,4CACmC,sBAAYA,WAAW,KAAvB,aADnC,wBACgH,sBAAYA,WAAW,KAAvB,aADhH,oBAEE,sBAAYA,WAAW,KAAvB,UAFF,kCAEsF,sBAAYA,WAAW,KAAvB,qBAFtF,wBAE2K,sBAAYA,WAAW,KAAvB,QAF3K,+BAGe,sBAAYA,WAAW,KAAvB,cAHf,yEAI4B,sBAAYA,WAAW,KAAvB,qBAJ5B,+CAIwI,sBAAYA,WAAW,KAAvB,QAJxI,eAKA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,gBADZ,scAyBL,cACE,GAAM,gDADR,iDAGA,0IACwB,sBAAYA,WAAW,KAAvB,cADxB,sDACoI,sBAAYA,WAAW,KAAvB,YADpI,MAEA,sDAAwC,sBAAYA,WAAW,KAAvB,aAAxC,YACA,mBACE,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,uBAApB,oBAAwG,sBAAYA,WAAW,MAAvB,YAAxG,+BACA,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,kBAApB,yBAAwG,sBAAYA,WAAW,MAAvB,cACxG,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,YAApB,mBAA4F,sBAAYA,WAAW,MAAvB,SAA5F,cAA4J,sBAAYA,WAAW,MAAvB,cAC5J,cAAIA,WAAW,OAAK,sBAAYA,WAAW,MAAvB,eAApB,uCAAmH,sBAAYA,WAAW,MAAvB,oBAAnH,eAA+L,sBAAYA,WAAW,MAAvB,SAA/L,WAEF,sDAAwC,sBAAYA,WAAW,KAAvB,YAAxC,+BAA2H,sBAAYA,WAAW,KAAvB,SAA3H,MACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,gBADZ,42CAmDR,CAGDJ,EAAWK,gBAAiB,C,8FC7P5B,SAASC,EAAgBC,EAAKC,EAAKZ,GAYjC,OAXIY,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BZ,MAAOA,EACPe,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOZ,EAGNW,CACT,CAoBA,SAASO,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KACAM,EAAKM,KAAKC,MAAMP,EAAME,EACxB,CAEA,OAAOF,CACT,CAEA,SAASQ,EAAeC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,CAAC,EAEhDA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUvB,GAC9CF,EAAgBoB,EAAQlB,EAAKsB,EAAOtB,GACtC,IACSC,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUvB,GACxCC,OAAOC,eAAegB,EAAQlB,EAAKC,OAAOa,yBAAyBQ,EAAQtB,GAC7E,GAEJ,CAEA,OAAOkB,CACT,CAiBA,SAASQ,EAAyBJ,EAAQK,GACxC,GAAc,MAAVL,EAAgB,MAAO,CAAC,EAE5B,IAEItB,EAAKmB,EAFLD,EAlBN,SAAuCI,EAAQK,GAC7C,GAAc,MAAVL,EAAgB,MAAO,CAAC,EAC5B,IAEItB,EAAKmB,EAFLD,EAAS,CAAC,EACVU,EAAa3B,OAAOQ,KAAKa,GAG7B,IAAKH,EAAI,EAAGA,EAAIS,EAAWP,OAAQF,IACjCnB,EAAM4B,EAAWT,GACbQ,EAASE,QAAQ7B,IAAQ,IAC7BkB,EAAOlB,GAAOsB,EAAOtB,IAGvB,OAAOkB,CACT,CAKeY,CAA8BR,EAAQK,GAInD,GAAI1B,OAAOS,sBAAuB,CAChC,IAAIqB,EAAmB9B,OAAOS,sBAAsBY,GAEpD,IAAKH,EAAI,EAAGA,EAAIY,EAAiBV,OAAQF,IACvCnB,EAAM+B,EAAiBZ,GACnBQ,EAASE,QAAQ7B,IAAQ,GACxBC,OAAO+B,UAAUC,qBAAqBC,KAAKZ,EAAQtB,KACxDkB,EAAOlB,GAAOsB,EAAOtB,GAEzB,CAEA,OAAOkB,CACT,CAEA,IAIIiB,EAA0B,gBAAoB,CAAC,GAS/CC,EAAmB,SAA0B3C,GAC/C,IAAI4C,EAAoB,aAAiBF,GACrCG,EAAgBD,EAMpB,OAJI5C,IACF6C,EAjBoB,mBAiBO7C,EAAcA,EAAW4C,GAAqBpB,EAAeA,EAAe,CAAC,EAAGoB,GAAoB5C,IAG1H6C,CACT,EACIC,EAAc,SAAqB7C,GACrC,IAAI4C,EAAgBF,EAAiB1C,EAAMD,YAC3C,OAAoB,gBAAoB0C,EAAWK,SAAU,CAC3DpD,MAAOkD,GACN5C,EAAM+C,SACX,EAGIC,EAAW,CACbC,WAAY,OACZC,QAAS,SAAiBC,GACxB,IAAIJ,EAAWI,EAAKJ,SACpB,OAAoB,gBAAoB,WAAgB,CAAC,EAAGA,EAC9D,GAEEK,EAAgC,cAAiB,SAAUpD,EAAOqD,GACpE,IAAIC,EAAiBtD,EAAMD,WACvBE,EAAUD,EAAMC,QAChBsD,EAAevD,EAAMuD,aACrBrD,EAAaF,EAAME,WACnBsD,EAAMxB,EAAyBhC,EAAO,CAAC,aAAc,UAAW,eAAgB,eAEhFD,EAAa2C,EAAiBY,GAC9BG,EAAOxD,EACPyD,EAAY3D,EAAW,GAAG4D,OAAOzD,EAAY,KAAKyD,OAAOF,KAAU1D,EAAW0D,IAAST,EAASS,IAASF,EAE7G,OAAID,EACkB,gBAAoBI,EAAWnC,EAAeA,EAAe,CAC/E8B,IAAKA,GACJG,GAAM,CAAC,EAAG,CACXzD,WAAYuD,KAII,gBAAoBI,EAAWnC,EAAe,CAChE8B,IAAKA,GACJG,GACL,IAEA,SAASI,EAAeH,EAAMzD,GAC5B,IAAI6D,EAAOnC,UACPzB,EAAUD,GAASA,EAAMC,QAE7B,GAAoB,iBAATwD,GAAqBxD,EAAS,CACvC,IAAI6D,EAAaD,EAAKlC,OAClBoC,EAAwB,IAAIC,MAAMF,GACtCC,EAAsB,GAAKX,EAC3B,IAAIa,EAAW,CAAC,EAEhB,IAAK,IAAI3D,KAAON,EACVkE,eAAe1B,KAAKxC,EAAOM,KAC7B2D,EAAS3D,GAAON,EAAMM,IAI1B2D,EAASV,aAAeE,EACxBQ,EAAuB,QAAoB,iBAATR,EAAoBA,EAAOxD,EAC7D8D,EAAsB,GAAKE,EAE3B,IAAK,IAAIxC,EAAI,EAAGA,EAAIqC,EAAYrC,IAC9BsC,EAAsBtC,GAAKoC,EAAKpC,GAGlC,OAAO,sBAA0B,KAAMsC,EACzC,CAEA,OAAO,sBAA0B,KAAMF,EACzC,CA7BAT,EAAiBe,YAAc,kB","sources":["webpack://@autoviews/website/./docs/entities/array-components.md","webpack://@autoviews/website/./node_modules/@mdx-js/react/dist/esm.js"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Creating Array components';\nexport const metadata = {\n  \"unversionedId\": \"entities/array-components\",\n  \"id\": \"entities/array-components\",\n  \"title\": \"Creating Array components\",\n  \"description\": \"AutoViews does not come with pre-made components to render arrays (doing so will defeat the idea of\",\n  \"source\": \"@site/docs/entities/array-components.md\",\n  \"sourceDirName\": \"entities\",\n  \"slug\": \"/entities/array-components\",\n  \"permalink\": \"/autoviews/docs/entities/array-components\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/wix-incubator/autoviews/tree/master/website/docs/entities/array-components.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"mySidebar\",\n  \"previous\": {\n    \"title\": \"The Components Repository\",\n    \"permalink\": \"/autoviews/docs/entities/components-repo\"\n  },\n  \"next\": {\n    \"title\": \"Creating Object components\",\n    \"permalink\": \"/autoviews/docs/entities/object-components\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [{\n  value: 'AutoItems',\n  id: 'autoitems',\n  level: 2\n}, {\n  value: '<code>AutoItems</code> props',\n  id: 'autoitems-props',\n  level: 3\n}, {\n  value: 'the render function',\n  id: 'the-render-function',\n  level: 3\n}, {\n  value: 'Example - rendering a plain list',\n  id: 'example---rendering-a-plain-list',\n  level: 3\n}, {\n  value: 'Example - rendering an HTML list',\n  id: 'example---rendering-an-html-list',\n  level: 3\n}, {\n  value: 'Example - rending an HTML table',\n  id: 'example---rending-an-html-table',\n  level: 3\n}, {\n  value: 'Example - rending an HTML Table with headers',\n  id: 'example---rending-an-html-table-with-headers',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"creating-array-components\"\n    }}>{`Creating Array components`}</h1>\n    <p>{`AutoViews does not come with pre-made components to render arrays (doing so will defeat the idea of\nusing your own components). However, AutoViews provides utilities and APIs to create your own components\nto render arrays.`}</p>\n    <p>{`The simplest array component will be`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`new ComponentsRepo('ArrayRepo').register('array', {\n  name: 'tableComponent',\n  component: props => <AutoItems {...props} />\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"autoitems\"\n    }}>{`AutoItems`}</h2>\n    <p><inlineCode parentName=\"p\">{`AutoItems`}</inlineCode>{` is a utility element used to render the elements of the array.\nInternally it apply `}<inlineCode parentName=\"p\">{`AutoViews`}</inlineCode>{` for each of the items of the array.`}</p>\n    <p>{`It can be used with array of objects, strings, numbers or other types, including mixed type arrays, delegating\nto `}<inlineCode parentName=\"p\">{`AutoViews`}</inlineCode>{` to render the actual item.`}</p>\n    <h3 {...{\n      \"id\": \"autoitems-props\"\n    }}><inlineCode parentName=\"h3\">{`AutoItems`}</inlineCode>{` props`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`extending `}<inlineCode parentName=\"li\">{`AutoViewProps`}</inlineCode>{` - getting the same properties as `}<inlineCode parentName=\"li\">{`AutoViews`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`render`}</inlineCode>{` - optional callback to apply to each of the rendered array elements`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"the-render-function\"\n    }}>{`the render function`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`declare function render(\n  item: React.ReactNode,\n  props: AutoViewProps,\n  index: number\n): React.ReactNode;\n`}</code></pre>\n    <p>{`The render callback parameters`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`item`}</inlineCode>{` - the rendered item, rendered using `}<inlineCode parentName=\"li\">{`AutoViews`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`props`}</inlineCode>{` - the `}<inlineCode parentName=\"li\">{`AutoViewProps`}</inlineCode>{` used to render the item.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`index`}</inlineCode>{` - the index of the item in the array`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example---rendering-a-plain-list\"\n    }}>{`Example - rendering a plain list`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`new ComponentsRepo('ArrayRepo').register('array', {\n  name: 'tableComponent',\n  component: props => <AutoItems {...props} />\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---rendering-an-html-list\"\n    }}>{`Example - rendering an HTML list`}</h3>\n    <p>{`This example renders an HTML list.\nThe example is using `}<inlineCode parentName=\"p\">{`AutoItems.render`}</inlineCode>{` to wrap the per item element (`}<inlineCode parentName=\"p\">{`node`}</inlineCode>{` below) with the list `}<inlineCode parentName=\"p\">{`<li>`}</inlineCode>{` element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`new ComponentsRepo('ArrayRepo').register('array', {\n  name: 'tableComponent',\n  component: props => (\n    <ul>\n      <AutoItems\n        {...props}\n        render={node => <li>node</li>}\n      ></AutoItems>\n    </ul>\n  )\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---rending-an-html-table\"\n    }}>{`Example - rending an HTML table`}</h3>\n    <p>{`Assuming out data has the form `}<inlineCode parentName=\"p\">{`Array<object>`}</inlineCode>{`,\nThis example renders the table using `}<inlineCode parentName=\"p\">{`AutoItems`}</inlineCode>{` which delegates to `}<inlineCode parentName=\"p\">{`AutoViews`}</inlineCode>{` to render\nthe `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{`. AutoViews will then use the `}<inlineCode parentName=\"p\">{`tablrRowComponent`}</inlineCode>{`, which renders the `}<inlineCode parentName=\"p\">{`<tr>`}</inlineCode>{` element\nand is using the `}<inlineCode parentName=\"p\">{`AutoFields`}</inlineCode>{` to render the members of the object.\nthe example is also using the `}<inlineCode parentName=\"p\">{`AutoFields.render`}</inlineCode>{` property to wrap the fields controls with `}<inlineCode parentName=\"p\">{`<td>`}</inlineCode>{` elements.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`new ComponentsRepo('ArrayRepo')\n  .register('array', {\n    name: 'tableComponent',\n    component: props => (\n      <table>\n        <tbody>\n          <AutoItems {...props} />\n        </tbody>\n      </table>\n    )\n  })\n  .register('object', {\n    name: 'tableRowComponent',\n    component: props => (\n      <tr>\n        <AutoFields\n          {...props}\n          render={node => <td>node</td>}\n        />\n      </tr>\n    )\n  });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---rending-an-html-table-with-headers\"\n    }}>{`Example - rending an HTML Table with headers`}</h3>\n    <p>{`To render a table with headers, we need to extend the example above with logic to extract\nthe field titles from the `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{`, filter and order the fields as specified in the `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{`.`}</p>\n    <p>{`This involves a bit of low level `}<inlineCode parentName=\"p\">{`AutoViews`}</inlineCode>{` apis -`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`extractItemUISchema`}</inlineCode>{` - extracts the `}<inlineCode parentName=\"li\">{`UISchema`}</inlineCode>{` for the items of an array`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`createUISchema`}</inlineCode>{` - creates a default `}<inlineCode parentName=\"li\">{`UISchema`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getHints`}</inlineCode>{` - returns the `}<inlineCode parentName=\"li\">{`hints`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`UISchema`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`orderFields`}</inlineCode>{` - orders the field names from the `}<inlineCode parentName=\"li\">{`JSONSchema.items`}</inlineCode>{` using the `}<inlineCode parentName=\"li\">{`order`}</inlineCode>{` hint`}</li>\n    </ul>\n    <p>{`once we have the ordered headers `}<inlineCode parentName=\"p\">{`string[]`}</inlineCode>{`, we render the headers as `}<inlineCode parentName=\"p\">{`thead`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {\n    AutoViewProps,\n    AutoItems,\n    AutoFields,\n    orderFields,\n    getHints,\n    extractItemUISchema,\n    createUISchema\n} from \"@autoviews/core\";\n\nnew ComponentsRepo(\"ArrayRepo\")\n    .register(\"array\", {\n        name: \"tableComponent\",\n        component: (props) => {\n            const headers = orderFields(\n                Object.keys((props.schema.items as any).properties),\n                getHints(extractItemUISchema(props.uiSchema ?? createUISchema()), \"\").order\n            ).map(\n                (field) => (props.schema?.items as any).properties[field].title\n            ) as string[];\n\n            return (\n                <table>\n                    <thead>\n                        <tr>\n                            {headers.map((header, i) => (\n                                <td key={i}>{header}</td>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <AutoItems {...props}/>\n                    </tbody>\n                </table>\n            )\n        }\n    })\n    .register(\"object\", {\n        name: \"tableRowComponent\",\n        component: props => (\n            <tr>\n                <AutoFields {...props} render={\n                    (node) => <td>node</td>\n                }/>\n            </tr>\n        )\n    })\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","contextComponents","allComponents","MDXProvider","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","originalType","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName"],"sourceRoot":""}