"use strict";(self.webpackChunk_autoviews_website=self.webpackChunk_autoviews_website||[]).push([[839],{7880:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>f,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var o={};t.r(o),t.d(o,{dependencies:()=>p,files:()=>r,options:()=>m});var s=t(7462),a=(t(7294),t(3905)),i=t(8155);const r={"/App.tsx":"import React from 'react';\nimport {\n    RepositoryProvider,\n    AutoView,\n    CoreSchemaMetaSchema\n} from '@autoviews/core';\n\nimport {data} from './data';\nimport schema from './schema.json';\nimport {repo} from './repo';\n\nexport default function App() {\n    return (\n        <RepositoryProvider components={repo}>\n            <AutoView\n                schema={schema as CoreSchemaMetaSchema}\n                data={data}\n            />\n        </RepositoryProvider>\n    );\n}\n","/repo.tsx":"import React from 'react';\nimport {ComponentsRepo, AutoFields, AutoItems} from '@autoviews/core';\nimport {Box, List, ListItem, ListItemText, Chip, Divider} from '@mui/material';\n\nexport const repo = new ComponentsRepo('MyListRepo')\n    .register('array', {\n        name: 'MyList',\n        component: props => (\n            <Box\n                component=\"form\"\n                sx={{'& .MuiTextField-root': {m: 1, width: '25ch'}}}\n                noValidate\n                autoComplete=\"off\"\n            >\n                <List\n                    sx={{bgcolor: 'background.paper'}}\n                    dense\n                >\n                    <AutoItems {...props} />\n                </List>\n            </Box>\n        )\n    })\n    .register('object', {\n        name: 'MyObject',\n        component: props => (\n            <>\n                <ListItem>\n                    <AutoFields\n                        pick={['login', 'active']}\n                        {...props}\n                    />\n                </ListItem>\n                <Divider component=\"li\" />\n            </>\n        )\n    })\n    .register('string', {\n        name: 'MyStringComponent',\n        component: props => <ListItemText>{props.data}</ListItemText>\n    })\n    .register('boolean', {\n        name: 'MyBooleanComponent',\n        component: props => (\n            <Chip\n                label={props.data ? 'online' : 'offline'}\n                color={props.data ? 'success' : 'error'}\n            />\n        )\n    });\n","/schema.json":'{\n  "type": "array",\n  "items": {\n    "type": "object",\n    "properties": {\n      "login": {\n        "type": "string"\n      },\n      "age": {\n        "type": "number"\n      },\n      "active": {\n        "type": "boolean"\n      }\n    }\n  }\n}\n',"/data.js":"export const data = [\n    {\n        login: 'johondoe',\n        age: 21,\n        active: true\n    },\n    {\n        login: 'janedoe',\n        age: 20,\n        active: false\n    }\n];\n"},p={"@mui/material":"^5.3.1","@emotion/react":"^11.7.1","@emotion/styled":"^11.6.0",lodash:"^4.17.21"},m={activePath:"/App.tsx"},c={},l="Basic usage",d={unversionedId:"examples/basic",id:"examples/basic",title:"Basic usage",description:"This is the basic example of using `` component.",source:"@site/docs/examples/basic.md",sourceDirName:"examples",slug:"/examples/basic",permalink:"/autoviews/docs/examples/basic",draft:!1,editUrl:"https://github.com/wix-incubator/autoviews/tree/master/website/docs/examples/basic.md",tags:[],version:"current",frontMatter:{},sidebar:"examples",previous:{title:"examples",permalink:"/autoviews/docs/examples"},next:{title:"Showcase",permalink:"/autoviews/docs/examples/showcase"}},u={},h=[],x={toc:h};function f(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,s.Z)({},x,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"basic-usage"},"Basic usage"),(0,a.kt)("p",null,"This is the basic example of using ",(0,a.kt)("inlineCode",{parentName:"p"},"<Autoview />")," component."),(0,a.kt)("p",null,"Most of the work in this example is happening in the ",(0,a.kt)("inlineCode",{parentName:"p"},"repo.tsx")," file, where you bind components to the ",(0,a.kt)("inlineCode",{parentName:"p"},"JSONSchema")," data types."),(0,a.kt)("p",null,"Further examples will extend this one or will use amazing repo ",(0,a.kt)("a",{parentName:"p",href:"/docs/entities/components-repo"},"composition")," features."),(0,a.kt)(i.B,(0,s.Z)({},o,{mdxType:"Demo"})))}f.isMDXComponent=!0}}]);
//# sourceMappingURL=df235e99.904535a6.js.map