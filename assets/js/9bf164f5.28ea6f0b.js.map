{"version":3,"file":"assets/js/9bf164f5.28ea6f0b.js","mappings":"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","sources":["webpack://@autoviews/website/./docs/entities/the-json-schema.md"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'The JSON Schema';\nexport const metadata = {\n  \"unversionedId\": \"entities/the-json-schema\",\n  \"id\": \"entities/the-json-schema\",\n  \"title\": \"The JSON Schema\",\n  \"description\": \"The AutoView component is using a standard JSONSchema\",\n  \"source\": \"@site/docs/entities/the-json-schema.md\",\n  \"sourceDirName\": \"entities\",\n  \"slug\": \"/entities/the-json-schema\",\n  \"permalink\": \"/autoviews/docs/entities/the-json-schema\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/wix-incubator/autoviews/tree/master/website/docs/entities/the-json-schema.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"mySidebar\",\n  \"previous\": {\n    \"title\": \"The Repository Provider\",\n    \"permalink\": \"/autoviews/docs/entities/repository-provider\"\n  },\n  \"next\": {\n    \"title\": \"UISchema\",\n    \"permalink\": \"/autoviews/docs/entities/ui-schema\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [{\n  value: 'Usage of the JSONSchema',\n  id: 'usage-of-the-jsonschema',\n  level: 2\n}, {\n  value: 'Example - An Object',\n  id: 'example---an-object',\n  level: 2\n}, {\n  value: 'Example - Array of Objects',\n  id: 'example---array-of-objects',\n  level: 2\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"the-json-schema\"\n    }}>{`The JSON Schema`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` component is using a standard `}<a parentName=\"p\" {...{\n        \"href\": \"https://json-schema.org/\"\n      }}><inlineCode parentName=\"a\">{`JSONSchema`}</inlineCode></a></p>\n    <p><inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` supports any structure of a `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` with any level of nesting, assuming\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/entities/components-repo\"\n      }}>{`the component repository`}</a>{` has components to render each type used in the schema.`}</p>\n    <p>{`The key attributes of `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` used with `}<inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` are`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`type`}</inlineCode>{` - the type of an object or field, such as `}<inlineCode parentName=\"li\">{`array`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`number`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{`, etc.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`title`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`description`}</inlineCode>{` - The `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`description`}</inlineCode>{` annotation keywords are descriptive only.\nThey do not add constraints to the data being validated. With `}<inlineCode parentName=\"li\">{`AutoView`}</inlineCode>{` those can be used by components to render\na field title or a field description.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`required`}</inlineCode>{` - describes which fields are required for an object.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`properties`}</inlineCode>{` - describes the properties of an object.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`items`}</inlineCode>{` - describes the type of array items, as a reference to another type or inline.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`maximum`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`minimum`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`exclusiveMaximum`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`exclusiveMinimum`}</inlineCode>{` - constraints for `}<inlineCode parentName=\"li\">{`number`}</inlineCode>{` types which components (in the repo) can optionally use,\nor can be used as part of component `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/entities/components-repo#predicates\"\n        }}>{`predicates`}</a>{` in component repo.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`maxLength`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`minLength`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`pattern`}</inlineCode>{` - constraints for `}<inlineCode parentName=\"li\">{`string`}</inlineCode>{` types which components (in the repo) can optionally use,\nor can be used as part of component `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/entities/components-repo#predicates\"\n        }}>{`predicates`}</a>{` in component repo.`}</li>\n    </ul>\n    <p>{`note: `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` has other schema fields, which can be used by components registered in the components repo,\nor used as part of component `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/entities/components-repo#predicates\"\n      }}>{`predicates`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage-of-the-jsonschema\"\n    }}>{`Usage of the JSONSchema`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` should represent the structure of the data that `}<inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` will render.\n`}<inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` is using the `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` to select which components to render, regardless if the actual\nvalues are present in the `}<inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` property.`}</p>\n    <p><inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` can validate the data with the schema (by setting the `}<inlineCode parentName=\"p\">{`validation`}</inlineCode>{` prop).`}</p>\n    <h2 {...{\n      \"id\": \"example---an-object\"\n    }}>{`Example - An Object`}</h2>\n    <p>{`Schema of an object`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import {CoreSchemaMetaSchema} from '@autoviews/core';\n\nconst userSchema: CoreSchemaMetaSchema = {\n  $id: 'userSchema',\n  type: 'object',\n  properties: {\n    firstName: {\n      type: 'string',\n      title: 'First Name'\n    },\n    lastName: {\n      type: 'string',\n      title: 'Last Name'\n    },\n    age: {\n      type: 'number',\n      title: 'Age'\n    },\n    active: {\n      type: 'boolean',\n      title: 'Is User Active'\n    }\n  },\n  required: ['firstName', 'lastName', 'age']\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example---array-of-objects\"\n    }}>{`Example - Array of Objects`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`export const usersSchema: CoreSchemaMetaSchema = {\n  type: 'array',\n  title: 'Users',\n  items: userSchema\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}