{"version":3,"file":"assets/js/9e4087bc.d9f7647e.js","mappings":"sNAWA,SAASA,EAAT,GAA8B,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MACnB,OACE,gCACE,0BAAKD,GACL,0BACGC,EAAMC,KAAI,SAACC,GAAD,OACT,sBAAIC,IAAKD,EAAKE,SAASC,MACrB,gBAAC,IAAD,CAAMC,GAAIJ,EAAKE,SAASG,WACrBL,EAAKE,SAASI,cADjB,MACmCN,EAAKE,SAASK,aAS7D,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,MACrB,OACE,2BAASC,UAAU,mBACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,OACZD,EAAMV,KAAI,SAACY,EAAQC,GAAT,OACT,uBAAKX,IAAKW,EAAKF,UAAU,8BACvB,gBAACd,EAASe,UAqBT,SAASE,EAAT,GAAiC,IAZtBC,EAClBC,EAW6BC,EAAU,EAAVA,QAC7BT,GAAQU,EAAAA,EAAAA,GAAU,CACtBC,GAAI,2BACJC,QAAS,UACTC,YAAa,mDAETA,GAAcH,EAAAA,EAAAA,GAAU,CAC5BC,GAAI,iCACJC,QAAS,UACTC,YAAa,yDAETX,GAvBkBK,EAuBOE,EAAQF,UAtBjCC,EAAcD,EAAUO,aAAY,SAACvB,EAAOE,GAChD,IAAMH,EAAOG,EAAKE,SAASC,KAAKmB,MAAM,KAAK,GACrCC,EAAYzB,EAAM0B,IAAI3B,IAAS,GACrC,OAAOC,EAAM2B,IAAI5B,EAAV,CAAiBG,GAAjB,OAA0BuB,MAChC,IAAIG,KACAC,MAAMC,KAAKb,GAAa,kBAAoB,CACjDlB,KAD6B,KAE7BC,MAF6B,UAkB/B,OACE,gBAAC,IAAD,CAAQS,MAAOA,EAAOa,YAAaA,GACjC,0BAAQV,UAAU,sBAChB,uBAAKA,UAAU,aACb,sBAAIA,UAAU,eAAeH,GAC7B,qBAAGG,UAAU,kBAAkBU,KAGnC,4BAAOX,EAAMoB,OAAS,GAAK,gBAACrB,EAAD,CAAcC,MAAOA","sources":["webpack://@autoviews/website/../../node_modules/@docusaurus/theme-classic/lib-next/theme/BlogArchivePage/index.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport Layout from '@theme/Layout';\nimport Link from '@docusaurus/Link';\nimport {translate} from '@docusaurus/Translate';\n\nfunction Year({year, posts}) {\n  return (\n    <>\n      <h3>{year}</h3>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.metadata.date}>\n            <Link to={post.metadata.permalink}>\n              {post.metadata.formattedDate} - {post.metadata.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nfunction YearsSection({years}) {\n  return (\n    <section className=\"margin-vert--lg\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {years.map((_props, idx) => (\n            <div key={idx} className=\"col col--4 margin-vert--lg\">\n              <Year {..._props} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n\nfunction listPostsByYears(blogPosts) {\n  const postsByYear = blogPosts.reduceRight((posts, post) => {\n    const year = post.metadata.date.split('-')[0];\n    const yearPosts = posts.get(year) || [];\n    return posts.set(year, [post, ...yearPosts]);\n  }, new Map());\n  return Array.from(postsByYear, ([year, posts]) => ({\n    year,\n    posts,\n  }));\n}\n\nexport default function BlogArchive({archive}) {\n  const title = translate({\n    id: 'theme.blog.archive.title',\n    message: 'Archive',\n    description: 'The page & hero title of the blog archive page',\n  });\n  const description = translate({\n    id: 'theme.blog.archive.description',\n    message: 'Archive',\n    description: 'The page & hero description of the blog archive page',\n  });\n  const years = listPostsByYears(archive.blogPosts);\n  return (\n    <Layout title={title} description={description}>\n      <header className=\"hero hero--primary\">\n        <div className=\"container\">\n          <h1 className=\"hero__title\">{title}</h1>\n          <p className=\"hero__subtitle\">{description}</p>\n        </div>\n      </header>\n      <main>{years.length > 0 && <YearsSection years={years} />}</main>\n    </Layout>\n  );\n}\n"],"names":["Year","year","posts","map","post","key","metadata","date","to","permalink","formattedDate","title","YearsSection","years","className","_props","idx","BlogArchive","blogPosts","postsByYear","archive","translate","id","message","description","reduceRight","split","yearPosts","get","set","Map","Array","from","length"],"sourceRoot":""}