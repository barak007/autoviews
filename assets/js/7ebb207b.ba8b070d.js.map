{"version":3,"file":"assets/js/7ebb207b.ba8b070d.js","mappings":"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","sources":["webpack://@autoviews/website/./docs/entities/ui-schema.md","webpack://@autoviews/website/./node_modules/@mdx-js/react/dist/esm.js"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'UISchema';\nexport const metadata = {\n  \"unversionedId\": \"entities/ui-schema\",\n  \"id\": \"entities/ui-schema\",\n  \"title\": \"UISchema\",\n  \"description\": \"The optional UISchema represents additional instructions for how AutoView is to render the data.\",\n  \"source\": \"@site/docs/entities/ui-schema.md\",\n  \"sourceDirName\": \"entities\",\n  \"slug\": \"/entities/ui-schema\",\n  \"permalink\": \"/autoviews/docs/entities/ui-schema\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/wix-incubator/autoviews/tree/master/packages/website/docs/entities/ui-schema.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"mySidebar\",\n  \"previous\": {\n    \"title\": \"The JSON Schema\",\n    \"permalink\": \"/autoviews/docs/entities/the-json-schema\"\n  },\n  \"next\": {\n    \"title\": \"Events\",\n    \"permalink\": \"/autoviews/docs/entities/events\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [{\n  value: 'Usage of <code>UISchema</code>',\n  id: 'usage-of-uischema',\n  level: 2\n}, {\n  value: 'Properties of <code>UISchema</code>',\n  id: 'properties-of-uischema',\n  level: 2\n}, {\n  value: 'the <code>components</code> overrides',\n  id: 'the-components-overrides',\n  level: 2\n}, {\n  value: 'the getComponentOptions utility',\n  id: 'the-getcomponentoptions-utility',\n  level: 3\n}, {\n  value: 'Example - component override and options',\n  id: 'example---component-override-and-options',\n  level: 3\n}, {\n  value: 'The <code>hints</code> UI hint',\n  id: 'the-hints-ui-hint',\n  level: 2\n}, {\n  value: 'Example - the <code>order</code> and <code>hidden</code> hints',\n  id: 'example---the-order-and-hidden-hints',\n  level: 3\n}, {\n  value: 'Example - the <code>uiGroups</code> hint',\n  id: 'example---the-uigroups-hint',\n  level: 3\n}, {\n  value: 'the <code>getHints</code> utility',\n  id: 'the-gethints-utility',\n  level: 2\n}, {\n  value: 'Example - extract the order and hidden hints',\n  id: 'example---extract-the-order-and-hidden-hints',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"uischema\"\n    }}>{`UISchema`}</h1>\n    <p>{`The optional `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{` represents additional instructions for how `}<inlineCode parentName=\"p\">{`AutoView`}</inlineCode>{` is to render the data.\nIt is used to modify the rendered components, by selecting a specific component for a specific property,\nordering object properties or grouping properties.`}</p>\n    <h2 {...{\n      \"id\": \"usage-of-uischema\"\n    }}>{`Usage of `}<inlineCode parentName=\"h2\">{`UISchema`}</inlineCode></h2>\n    <p>{`The best practice is to use `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{` allowing users to order or group fields or change which component to use for a field.\nIt can be used as a base for saving user setting views or as a way for applications to fine tune forms.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{` is not the best tool to switch layouts (from gallery to cards to table) as it assumes all the components are available\nfor rendering. To switch layouts, `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/entities/components-repo#using-multiple-repositories\"\n      }}>{`replacing a component repository`}</a>{` is a better solution.`}</p>\n    <h2 {...{\n      \"id\": \"properties-of-uischema\"\n    }}>{`Properties of `}<inlineCode parentName=\"h2\">{`UISchema`}</inlineCode></h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`UIHintsOverrides`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hints to modify`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`UIHints`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Hints to modify`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .order`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines the desired order of the fields to be rendered for an `}<inlineCode parentName=\"td\">{`object`}</inlineCode>{`. It is up to `}<a parentName=\"td\" {...{\n              \"href\": \"/docs/entities/object-components\"\n            }}>{`the object component`}</a>{` to use the order hints.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .hidden`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines which fields should be hidden. It is up to `}<a parentName=\"td\" {...{\n              \"href\": \"/docs/entities/object-components\"\n            }}>{`the object component`}</a>{` to use the hidden hints.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .uiGroups`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`UIGroup[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines field groups. It is up to `}<a parentName=\"td\" {...{\n              \"href\": \"/docs/entities/object-components\"\n            }}>{`the object component`}</a>{` to support field groups.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .uiGroups.name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines the name of a fields group.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .uiGroups.title`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines the title of a fields group.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .uiGroups.fields`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines which `}<inlineCode parentName=\"td\">{`object`}</inlineCode>{` fields are included in the group.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hints[pointer:string] .autoFocus`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`JSONPointer`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines which component should be focused when first rendering the form. It is up to the components to implement support for Autofocus.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`components`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`RepoPointersCollection`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{}`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Defines component overrides and component options`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`components[name: string]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`RepoPointers`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the Components Repository to apply the component hints to.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`compoennts[name: string] [pointer: string]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ComponentOptions`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The location in the JSONSchema using JSONPointer to apply the component override`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`compoennts[name: string] [pointer: string].name`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the component to use at the above location, which has to be available in the above component repository`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`compoennts[name: string] [pointer: string].options`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Options to pass to the component at the above location`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"the-components-overrides\"\n    }}>{`the `}<inlineCode parentName=\"h2\">{`components`}</inlineCode>{` overrides`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` field in `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{` is responsible for component overrides -\ndefining which component `}<inlineCode parentName=\"p\">{`<AutoView/>`}</inlineCode>{` should choose for a given field and what `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` this component should get.`}</p>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`<AutoView/>`}</inlineCode>{` picks last component record registered in `}<a parentName=\"p\" {...{\n        \"href\": \"docs/entities/components-repo#registering-multiple-components-per-jsonschema-data-type\"\n      }}>{`the components repository`}</a>{` for each type.\nWhen registering two (or more) components for a specific type, the last one will be used by default.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` overrides defines that for a specific `}<a parentName=\"p\" {...{\n        \"href\": \"https://tools.ietf.org/html/rfc6901\"\n      }}>{`JSONPointer`}</a>{` in the data `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{`\na component with specific `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` should be chosen.`}</p>\n    <h3 {...{\n      \"id\": \"the-getcomponentoptions-utility\"\n    }}>{`the getComponentOptions utility`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`getComponentOptions`}</inlineCode>{` utility function enables a component to extract the component options from the `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{`.`}</p>\n    <p>{`In most cases, it will be used as`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`export const myFunctionalComponent = props => {\n    let componentOptions  = getComponentOptions(\n        props.uiSchema!,\n        props.repositoryName,\n        props.schemaPointer\n    )\n    return (/*... the actual component */)\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---component-override-and-options\"\n    }}>{`Example - component override and options`}</h3>\n    <p>{`In this example we show how to use the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` overrides to render texts using one of three text components`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A styled text component, which gets the styles from the component options`}</li>\n      <li parentName=\"ol\">{`A header text component`}</li>\n      <li parentName=\"ol\">{`A Default paragraph component`}</li>\n    </ol>\n    <p>{`The example shows how to render`}</p>\n    <ol>\n      <li parentName=\"ol\">{`the `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{` field using the header component`}</li>\n      <li parentName=\"ol\">{`the `}<inlineCode parentName=\"li\">{`author`}</inlineCode>{` field using the styled component, with blue text`}</li>\n      <li parentName=\"ol\">{`the `}<inlineCode parentName=\"li\">{`content`}</inlineCode>{` field using the paragraph component`}</li>\n      <li parentName=\"ol\">{`the `}<inlineCode parentName=\"li\">{`status`}</inlineCode>{` field using the styled component, with blue background and white text`}</li>\n    </ol>\n    <p>{`The `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{` to use is then`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`export const uiSchema: UISchema = {\n  components: {\n    MyRepo: {\n      title: {\n        name: 'headerText'\n      },\n      author: {\n        name: 'styledText',\n        options: {color: 'blue'}\n      },\n      status: {\n        name: 'styledText',\n        options: {color: 'white', backgroundColor: 'blue'}\n      }\n    }\n  }\n};\n`}</code></pre>\n    <p>{`Notice there is no need to define that the `}<inlineCode parentName=\"p\">{`content`}</inlineCode>{` field is using the `}<inlineCode parentName=\"p\">{`paragraphText`}</inlineCode>{` as it is the default component for the `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` type.`}</p>\n    <p>{`Given the components repository`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myRepo = new ComponentsRepo('MyRepo')\n  .register('string', {\n    name: 'styledText',\n    component: props => (\n      <span\n        style={getComponentOptions(\n          props.uiSchema!,\n          props.repositoryName,\n          props.schemaPointer\n        )}\n      >\n        {props.data}\n      </span>\n    )\n  })\n  .register('string', {\n    name: 'headerText',\n    component: props => <h1>{props.data}</h1>\n  })\n  .register('string', {\n    name: 'paragraphText',\n    component: props => <p>{props.data}</p>\n  });\n//... other components;\n`}</code></pre>\n    <p>{`And given the Schema`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const postSchema: CoreSchemaMetaSchema = {\n  $id: 'post',\n  type: 'object',\n  properties: {\n    title: {\n      type: 'string',\n      title: 'Post Title'\n    },\n    author: {\n      type: 'string',\n      title: 'Author'\n    },\n    content: {\n      type: 'string',\n      title: 'The Full Comment'\n    },\n    status: {\n      type: 'string',\n      title: 'Approval Status'\n    }\n  }\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-hints-ui-hint\"\n    }}>{`The `}<inlineCode parentName=\"h2\">{`hints`}</inlineCode>{` UI hint`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`hints`}</inlineCode>{` member of UI hints defines additional instructions that `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` components in `}<inlineCode parentName=\"p\">{`ComponentsRepo`}</inlineCode>{` might implement.\nThe instructions, or hints, are field ordering, field hiding, grouping or autofocus.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`hints`}</inlineCode>{` UI hint defines that for a specific `}<inlineCode parentName=\"p\">{`JSONPointer`}</inlineCode>{` in the data `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` specific instructions should be applied.`}</p>\n    <p>{`The Hints can be applied in twp ways -`}</p>\n    <ol>\n      <li parentName=\"ol\">{`without ui groups`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`order`}</inlineCode>{` defines fields to be rendered in a specific order`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`hidden`}</inlineCode>{` defines fields to be hidden`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`autofocus`}</inlineCode>{` defines a field to be autofocused`}</li>\n    </ul>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`with ui groups`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`uiGroups`}</inlineCode>{` defines a field group. Groups are to be rendered in the order defined`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`uiGroup.name`}</inlineCode>{` defines the group name`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`uiGroup.title`}</inlineCode>{` defines the group title`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`uiGroup.fields`}</inlineCode>{` defines the fields of the group, to be rendered in the specified order`}</li>\n    </ul>\n    <p>{`When using groups, there are two 'special' keys - `}<inlineCode parentName=\"p\">{`OTHER_PROPERTIES`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`UNGROUPED`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`OTHER_PROPERTIES`}</inlineCode>{` is a special 'field' key that signifies a named group includes all properties that are not included in any other group`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UNGROUPED`}</inlineCode>{` is a special group that includes all properties that are not included in any other group`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example---the-order-and-hidden-hints\"\n    }}>{`Example - the `}<inlineCode parentName=\"h3\">{`order`}</inlineCode>{` and `}<inlineCode parentName=\"h3\">{`hidden`}</inlineCode>{` hints`}</h3>\n    <p>{`This example shows how to use the `}<inlineCode parentName=\"p\">{`order`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`hidden`}</inlineCode>{` hints on the above `}<inlineCode parentName=\"p\">{`postSchema`}</inlineCode>{` schema, to`}</p>\n    <ol>\n      <li parentName=\"ol\">{`order the fields as `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`content`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`author`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`hide the `}<inlineCode parentName=\"li\">{`status`}</inlineCode>{` field.`}</li>\n    </ol>\n    <p>{`The UISchema in this case will be`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`export const uiSchema: UISchema = {\n  hints: {\n    '': {\n      order: ['title', 'content', 'author'],\n      hidden: ['status']\n    }\n  },\n  components: {\n    MyRepo: {\n      title: {\n        name: 'headerText'\n      },\n      author: {\n        name: 'styledText',\n        options: {color: 'blue'}\n      },\n      status: {\n        name: 'styledText',\n        options: {color: 'white', backgroundColor: 'blue'}\n      }\n    }\n  }\n};\n`}</code></pre>\n    <p>{`The repo `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` component has to support the `}<inlineCode parentName=\"p\">{`hidden`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`order`}</inlineCode>{` hints - see more about `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/entities/object-components\"\n      }}>{`creating object components`}</a>{`.\nFor this example, the `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` component can be`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myRepo = new ComponentsRepo('MyRepo')\n  // ... other components\n  .register('object', {\n    name: 'MyObjectComponent',\n    component: props => <AutoFields {...props} />\n  });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---the-uigroups-hint\"\n    }}>{`Example - the `}<inlineCode parentName=\"h3\">{`uiGroups`}</inlineCode>{` hint`}</h3>\n    <p>{`This example shows how to use the `}<inlineCode parentName=\"p\">{`uiGroups`}</inlineCode>{` hint to group fields:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`title`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`content`}</inlineCode>{` fields as one group`}</li>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`author`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`status`}</inlineCode>{` fields as a second group.`}</li>\n    </ol>\n    <p>{`The example also shows how to build an `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` component that renders`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The groups separated with an `}<inlineCode parentName=\"li\">{`<hr/>`}</inlineCode>{` line`}</li>\n      <li parentName=\"ol\">{`The groups with a `}<inlineCode parentName=\"li\">{`<h2>`}</inlineCode>{` group title based on the group title field.`}</li>\n    </ol>\n    <p>{`The UISchema in this case will be`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`export const uiSchema: UISchema = {\n  hints: {\n    '': {\n      uiGroups: [\n        {\n          name: 'group 1',\n          title: 'The Post',\n          fields: ['title', 'content']\n        },\n        {\n          name: 'group 2',\n          title: 'The Post Metadata',\n          fields: ['author', 'status']\n        }\n      ]\n    }\n  },\n  components: {\n    MyRepo: {\n      title: {\n        name: 'headerText'\n      },\n      author: {\n        name: 'styledText',\n        options: {color: 'blue'}\n      },\n      status: {\n        name: 'styledText',\n        options: {color: 'white', backgroundColor: 'blue'}\n      }\n    }\n  }\n};\n`}</code></pre>\n    <p>{`and the `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` component will be`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myRepo = new ComponentsRepo('MyRepo')\n  // ... other components\n  .register('object', {\n    name: 'MyObjectComponent',\n    component: props => {\n      const {uiGroups} = getHints(props.uiSchema, props.schemaPointer);\n\n      if (!uiGroups) {\n        return <AutoFields {...props} />;\n      }\n\n      return (\n        <>\n          {uiGroups.map(group => (\n            <>\n              <h2>{group.title}</h2>\n              <AutoFields\n                {...props}\n                pick={\n                  // this utility retrieves \\`OTHER_PROPERTIES\\` used in \\`UIGroups\\` as well\n                  getPropertiesByGroupName(\n                    uiGroups,\n                    group.name,\n                    Object.keys(props.data)\n                  )\n                }\n              />\n              <hr />\n            </>\n          ))}\n        </>\n      );\n    }\n  });\n`}</code></pre>\n    <p>{`With the above `}<inlineCode parentName=\"p\">{`object`}</inlineCode>{` component the example`}</p>\n    <ol>\n      <li parentName=\"ol\">{`extracts the `}<inlineCode parentName=\"li\">{`uiGroups`}</inlineCode>{` using the `}<inlineCode parentName=\"li\">{`getHints`}</inlineCode>{` utility.`}</li>\n      <li parentName=\"ol\">{`then for each group renders the `}<inlineCode parentName=\"li\">{`<h2>`}</inlineCode>{` title.`}</li>\n      <li parentName=\"ol\">{`using the `}<inlineCode parentName=\"li\">{`AutoFields`}</inlineCode>{` utility and the `}<inlineCode parentName=\"li\">{`pick`}</inlineCode>{` property to only render the fields of that group.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`using the `}<inlineCode parentName=\"li\">{`getPropertiesByGroupName`}</inlineCode>{` to get the field names of the group, taking into account the `}<inlineCode parentName=\"li\">{`OTHER_PROPERTIES`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`UNGROUPED`}</inlineCode>{` keys.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"the-gethints-utility\"\n    }}>{`the `}<inlineCode parentName=\"h2\">{`getHints`}</inlineCode>{` utility`}</h2>\n    <p>{`This example shows how to access the `}<inlineCode parentName=\"p\">{`order`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`hidden`}</inlineCode>{` hints of the `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode>{` for the current object component to be rendered.\nThe `}<inlineCode parentName=\"p\">{`getHints`}</inlineCode>{` utility function lookups the hints given the current `}<inlineCode parentName=\"p\">{`JSONPointer`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"example---extract-the-order-and-hidden-hints\"\n    }}>{`Example - extract the order and hidden hints`}</h3>\n    <p>{`The following component will only render the list of hints, not the actual object data.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const myRepo = new ComponentsRepo('MyRepo')\n  // ... other components\n  .register('object', {\n    name: 'MyObjectComponent',\n    component: props => {\n      return (\n        <>\n          <div>\n            order list is:\n            {' ' +\n              getHints(props.uiSchema, props.schemaPointer).order?.join(', ')}\n          </div>\n          <div>\n            hidden list is:\n            {' ' +\n              getHints(props.uiSchema, props.schemaPointer).hidden?.join(', ')}\n          </div>\n        </>\n      );\n    }\n  });\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","value","id","level","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","contextComponents","allComponents","MDXProvider","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","originalType","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName"],"sourceRoot":""}