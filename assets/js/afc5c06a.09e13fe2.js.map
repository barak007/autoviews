{"version":3,"file":"assets/js/afc5c06a.09e13fe2.js","mappings":"kQAUO,MAAMA,EAAc,CAAC,EACfC,EAAe,aACfC,EAAW,CACtB,cAAiB,wBACjB,GAAM,wBACN,MAAS,aACT,YAAe,kFACf,OAAU,sCACV,cAAiB,aACjB,KAAQ,eACR,UAAa,8BACb,OAAS,EACT,QAAW,+FACX,KAAQ,GACR,QAAW,UACX,YAAe,CAAC,EAChB,QAAW,YACX,SAAY,CACV,MAAS,wBACT,UAAa,kDAEf,KAAQ,CACN,MAAS,eACT,UAAa,0CAGJC,EAAS,CAEtB,EAGaC,EAAM,GAEbC,EAAc,CAClBD,OAGa,SAASE,EAAW,GAG/B,IAH+B,WACjCC,KACGC,GACJ,EACC,OAAO,QALS,WAKC,UAAKH,EAAiBG,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAE5E,cACE,GAAM,cACH,eACL,iBAAK,2CAAyC,sBAAYC,WAAW,KAAM,MAAmB,KAAG,sBAAYA,WAAW,KAAM,QAAqB,KAAG,sBAAYA,WAAW,KAAM,QAAqB,MAAI,sBAAYA,WAAW,KAAM,SAAsB,MAAI,sBAAYA,WAAW,KAAM,SAAsB,MAAI,sBAAYA,WAAW,KAAM,SAAsB,MAAI,sBAAYA,WAAW,KAAM,QAAqB,MACna,iBAAK,sJACL,iBAAK,2KACL,iBAAK,8CAA4C,aAAGA,WAAW,IAC3D,KAAQ,4CACL,cAAkB,gCAA8B,aAAGA,WAAW,IACjE,KAAQ,kDACL,yBAA6B,KAExC,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://@autoviews/website/./docs/subschemas/subschemas.md"],"sourcesContent":["\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n/* @jsxFrag React.Fragment */\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Subschemas';\nexport const metadata = {\n  \"unversionedId\": \"subschemas/subschemas\",\n  \"id\": \"subschemas/subschemas\",\n  \"title\": \"Subschemas\",\n  \"description\": \"JSON Schemas includes such keywords as if/then/else, oneOf, allOf, anyOf, $ref.\",\n  \"source\": \"@site/docs/subschemas/subschemas.md\",\n  \"sourceDirName\": \"subschemas\",\n  \"slug\": \"/subschemas/\",\n  \"permalink\": \"/autoviews/docs/subschemas/\",\n  \"draft\": false,\n  \"editUrl\": \"https://github.com/wix-incubator/autoviews/tree/master/website/docs/subschemas/subschemas.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"mySidebar\",\n  \"previous\": {\n    \"title\": \"Repository Components\",\n    \"permalink\": \"/autoviews/docs/entities/repository-components\"\n  },\n  \"next\": {\n    \"title\": \"if/then/else\",\n    \"permalink\": \"/autoviews/docs/subschemas/conditions\"\n  }\n};\nexport const assets = {\n\n};\n\n\nexport const toc = [];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"subschemas\"\n    }}>{`Subschemas`}</h1>\n    <p>{`JSON Schemas includes such keywords as `}<inlineCode parentName=\"p\">{`if`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`then`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`else`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`oneOf`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`allOf`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`anyOf`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`$ref`}</inlineCode>{`.`}</p>\n    <p>{`These keywords serve to apply some parts of schemas, called subschemas, by resolving some logic or references to other schemas or part of schema.`}</p>\n    <p>{`Since AutoViews use JSON Schema to render UI, it's not determined how these keywords should affect rendering, rather library customers should define it by themselves.`}</p>\n    <p>{`All the keywords could be register within `}<a parentName=\"p\" {...{\n        \"href\": \"/autoviews/docs/entities/components-repo\"\n      }}>{`repository`}</a>{` and rendered anywhere with `}<a parentName=\"p\" {...{\n        \"href\": \"/autoviews/docs/entities/repository-components\"\n      }}>{`Repository Components`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n"],"names":["frontMatter","contentTitle","metadata","assets","toc","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}