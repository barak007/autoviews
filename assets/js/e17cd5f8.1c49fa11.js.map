{"version":3,"file":"assets/js/e17cd5f8.1c49fa11.js","mappings":"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","sources":["webpack://@autoviews/docs/../../node_modules/@mdx-js/react/dist/esm.js","webpack://@autoviews/docs/./docs/entities/object-components.md"],"sourcesContent":["import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n\n\nexport const frontMatter = {};\nexport const contentTitle = 'Creating Object components';\nexport const metadata = {\n  \"unversionedId\": \"entities/object-components\",\n  \"id\": \"entities/object-components\",\n  \"title\": \"Creating Object components\",\n  \"description\": \"AutoViews does not come with pre-made components to render objects (doing so will defeat the idea of\",\n  \"source\": \"@site/docs/entities/object-components.md\",\n  \"sourceDirName\": \"entities\",\n  \"slug\": \"/entities/object-components\",\n  \"permalink\": \"/autoviews/docs/entities/object-components\",\n  \"editUrl\": \"https://github.com/wix-incubator/autoviews/tree/master/packages/website/docs/entities/object-components.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"frontMatter\": {},\n  \"sidebar\": \"mySidebar\",\n  \"previous\": {\n    \"title\": \"Creating Array components\",\n    \"permalink\": \"/autoviews/docs/entities/array-components\"\n  },\n  \"next\": {\n    \"title\": \"The Repository Provider\",\n    \"permalink\": \"/autoviews/docs/entities/repository-provider\"\n  }\n};\nexport const assets = {\n\n};\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'AutoFields',\n  id: 'autofields',\n  level: 2\n}, {\n  value: '<code>AutoFields</code> props',\n  id: 'autofields-props',\n  level: 3\n}, {\n  value: 'the render function',\n  id: 'the-render-function',\n  level: 3\n}, {\n  value: 'Example - simple form rendering',\n  id: 'example---simple-form-rendering',\n  level: 3\n}, {\n  value: 'Example - rendering form for array objects',\n  id: 'example---rendering-form-for-array-objects',\n  level: 3\n}, {\n  value: 'Example - using the render function to add field titles',\n  id: 'example---using-the-render-function-to-add-field-titles',\n  level: 3\n}, {\n  value: 'Example - grouping different input fields using &#39;UISchema&#39;',\n  id: 'example---grouping-different-input-fields-using-uischema',\n  level: 3\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"creating-object-components\"\n    }}>{`Creating Object components`}</h1>\n    <p>{`AutoViews does not come with pre-made components to render objects (doing so will defeat the idea of\nusing your own components). However, AutoViews provides utilities and APIs to create your own components\nto render objects.`}</p>\n    <p>{`The simplest object component will be`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`new ComponentsRepo('ObjectRepo').register('object', {\n  name: 'obj',\n  component: props => <AutoFields {...props} />\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"autofields\"\n    }}>{`AutoFields`}</h2>\n    <p><inlineCode parentName=\"p\">{`AutoFields`}</inlineCode>{` is a utility element used to render the fields of an object.\nEach object field is matched with the `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode>{` fields by field names.\nInternally it apply `}<inlineCode parentName=\"p\">{`AutoViews`}</inlineCode>{` for each of the fields of the object.`}</p>\n    <h3 {...{\n      \"id\": \"autofields-props\"\n    }}><inlineCode parentName=\"h3\">{`AutoFields`}</inlineCode>{` props`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`extending `}<inlineCode parentName=\"li\">{`AutoViewProps`}</inlineCode>{` - getting the same properties as `}<inlineCode parentName=\"li\">{`AutoViews`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`render`}</inlineCode>{` - optional callback to apply to each of the rendered object fields`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"the-render-function\"\n    }}>{`the render function`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`declare function render(\n  item: React.ReactNode,\n  props: AutoViewProps,\n  key: string\n): React.ReactNode;\n`}</code></pre>\n    <p>{`The render callback parameters`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`item`}</inlineCode>{` - the rendered item, rendered using `}<inlineCode parentName=\"li\">{`AutoViews`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`props`}</inlineCode>{` - the `}<inlineCode parentName=\"li\">{`AutoViewProps`}</inlineCode>{` used to render the object field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`key`}</inlineCode>{` - the field name in the object`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example---simple-form-rendering\"\n    }}>{`Example - simple form rendering`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`new ComponentsRepo('ObjectRepo')\n  .register('string', {\n    name: 'StringComponent',\n    component: props => <input value={props.value} />\n  })\n  .register('number', {\n    name: 'NumberComponent',\n    component: props => (\n      <input\n        value={props.value}\n        type=\"number\"\n      />\n    )\n  })\n  .register('object', {\n    name: 'FormComponent',\n    component: props => (\n      <form>\n        <AutoFields {...props} />\n      </form>\n    )\n  });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---rendering-form-for-array-objects\"\n    }}>{`Example - rendering form for array objects`}</h3>\n    <p>{`This example shows how to render a form for an object which is a member of an array.\nTo do so, we need to specify to `}<inlineCode parentName=\"p\">{`AutoFields`}</inlineCode>{` which part of the schema to use\nto render the form, for instance for a new item form (new item to be added to the array).`}</p>\n    <p>{`The example is using the `}<inlineCode parentName=\"p\">{`extractItemUISchema`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`createUISchema`}</inlineCode>{` utility functions\nimported from `}<inlineCode parentName=\"p\">{`AutoViews`}</inlineCode>{` to extract the array items schema from the root schema\n(extract `}<inlineCode parentName=\"p\">{`userSchema`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`usersSchema`}</inlineCode>{`)`}</p>\n    <p>{`Such a form will be using such a component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`new ComponentsRepo('ObjectRepo')\n  .register('string', {\n    name: 'StringComponent',\n    component: props => <input value={props.value} />\n  })\n  .register('number', {\n    name: 'NumberComponent',\n    component: props => (\n      <input\n        value={props.value}\n        type=\"number\"\n      />\n    )\n  })\n  .register('object', {\n    name: 'FormComponent',\n    component: props => (\n      <form>\n        <AutoFields\n          {...props}\n          uiSchema={extractItemUISchema(props.uiSchema ?? createUISchema())}\n        />\n      </form>\n    )\n  });\n`}</code></pre>\n    <p>{`For reference, the schema used is something like the below schema`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const userSchema: CoreSchemaMetaSchema = {\n  $id: 'userSchema',\n  type: 'object',\n  properties: {\n    firstName: {\n      type: 'string',\n      title: 'First Name'\n    },\n    lastName: {\n      type: 'string',\n      title: 'Last Name'\n    },\n    age: {\n      type: 'number',\n      title: 'Age'\n    },\n    active: {\n      type: 'boolean',\n      title: 'Is User Active'\n    }\n  },\n  required: ['firstName', 'lastName', 'age']\n};\n\nexport const usersSchema: CoreSchemaMetaSchema = {\n  type: 'array',\n  title: 'Users',\n  items: userSchema\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---using-the-render-function-to-add-field-titles\"\n    }}>{`Example - using the render function to add field titles`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`new ComponentsRepo('ObjectRepo')\n  .register('string', {\n    name: 'StringComponent',\n    component: props => <input value={props.value} />\n  })\n  .register('number', {\n    name: 'NumberComponent',\n    component: props => (\n      <input\n        value={props.value}\n        type=\"number\"\n      />\n    )\n  })\n  .register('object', {\n    name: 'FormComponent',\n    component: props => (\n      <form>\n        <AutoFields\n          {...props}\n          render={node => (\n            <>\n              <span>{props.schema.title}</span>\n              node\n            </>\n          )}\n        />\n      </form>\n    )\n  });\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example---grouping-different-input-fields-using-uischema\"\n    }}>{`Example - grouping different input fields using 'UISchema'`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`export const FormComponent = (props: AutoViewProps) => {\n  const itemUISchema = extractItemUISchema(props.uiSchema ?? createUISchema());\n  const UISchemaAcessor = createUISchemaAccessor(\n    itemUISchema,\n    '',\n    ACCESSOR_TYPES.object\n  );\n\n  const allProperties = Object.keys(props.schema.properties!);\n  const groups = UISchemaAcessor.getGroups() ?? [];\n  const groupNames = groups.map(({name}) => name).concat([UNGROUPED]);\n  return (\n    <form>\n      {groupNames.map(name => {\n        const fields = getPropertiesByGroupName(\n          groups,\n          name,\n          allProperties\n        ).filter(field => allProperties.includes(field));\n\n        if (!fields.length) return null;\n\n        return (\n          <div\n            className=\"group\"\n            key={name}\n          >\n            <AutoFields\n              {...props}\n              uiSchema={itemUISchema}\n              pick={fields}\n            />\n          </div>\n        );\n      })}\n    </form>\n  );\n};\n\nnew ComponentsRepo('ObjectRepo')\n  .register('string', {\n    name: 'StringComponent',\n    component: props => <input value={props.value} />\n  })\n  .register('number', {\n    name: 'NumberComponent',\n    component: props => (\n      <input\n        value={props.value}\n        type=\"number\"\n      />\n    )\n  })\n  .register('object', {\n    name: 'FormComponent',\n    component: FormComponent\n  });\n`}</code></pre>\n    <p>{`For reference, the above form can use the `}<inlineCode parentName=\"p\">{`JSONSchema`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`const userSchema: CoreSchemaMetaSchema = {\n  $id: 'userSchema',\n  type: 'object',\n  properties: {\n    firstName: {\n      type: 'string',\n      title: 'First Name'\n    },\n    lastName: {\n      type: 'string',\n      title: 'Last Name'\n    },\n    age: {\n      type: 'number',\n      title: 'Age'\n    },\n    active: {\n      type: 'boolean',\n      title: 'Is User Active'\n    }\n  },\n  required: ['firstName', 'lastName', 'age']\n};\n`}</code></pre>\n    <p>{`and the `}<inlineCode parentName=\"p\">{`UISchema`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`export const hintsSchema: UISchema = {\n  hints: {\n    '/': {\n      order: ['age'],\n      uiGroups: [\n        {\n          name: 'personalData',\n          title: 'Personal Data',\n          fields: ['firstName', 'lastName']\n        },\n        {\n          name: 'other',\n          title: 'Other Fields',\n          fields: [OTHER_PROPERTIES]\n        }\n      ]\n    }\n  },\n  components: {}\n};\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","useMDXComponents","components","contextComponents","allComponents","MDXProvider","props","Provider","children","DEFAULTS","inlineCode","wrapper","_ref","MDXCreateElement","ref","propComponents","mdxType","originalType","parentName","etc","type","Component","concat","createElement","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","frontMatter","contentTitle","metadata","assets","toc","id","level","layoutProps","MDXContent","isMDXComponent"],"sourceRoot":""}